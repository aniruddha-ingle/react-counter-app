{"ast":null,"code":"var _jsxFileName = \"/Users/aniruddhaingle/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: Math.floor(Math.random() * 10) % 2,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n  }\n\n  render() {\n    /*#__PURE__*/\n    React.createElement(\"div\");\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 30\n        },\n        className: this.badgeClassGetter(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  badgeClassGetter() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/aniruddhaingle/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","Math","floor","random","tags","render","createElement","fontSize","badgeClassGetter","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CADlC;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;AAAA;;AAK9BC,EAAAA,MAAM,GAAG;AACP;AAAAT,IAAAA,KAAK,CAACU,aAAN,CAAoB,KAApB;AACA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAA+B,QAAA,SAAS,EAAE,KAAKC,gBAAL,EAA1C;AAAA,kBACG,KAAKC,WAAL;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBACG,KAAKV,KAAL,CAAWK,IAAX,CAAgBM,GAAhB,CAAqBC,GAAD,iBACnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAEDH,EAAAA,gBAAgB,GAAG;AACjB,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOY,OAAP;AACD;;AAEDH,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA/B6B;;AAkChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: Math.floor(Math.random() * 10) % 2,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n  render() {\n    React.createElement(\"div\");\n    return (\n      <React.Fragment>\n        <span style={{ fontSize: 30 }} className={this.badgeClassGetter()}>\n          {this.formatCount()}\n        </span>\n        <button className=\"btn btn-secondary btn-sm\">Increment</button>\n        <ul>\n          {this.state.tags.map((tag) => (\n            <li></li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  badgeClassGetter() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}