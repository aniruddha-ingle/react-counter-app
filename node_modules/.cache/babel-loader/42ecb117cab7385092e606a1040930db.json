{"ast":null,"code":"var _jsxFileName = \"/Users/aniruddhaingle/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  render() {\n    const {\n      counter,\n      onIncrement,\n      onDecrement,\n      onDelete\n    } = this.props;\n    const {\n      id,\n      value,\n      tags\n    } = counter;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Counter Number \", this.props.counter.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onIncrement(this.props.counter),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 30\n        },\n        className: this.badgeClassGetter(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDecrement(this.props.counter),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDelete(this.props.counter.id),\n        className: \"btn btn-danger btn-sm m-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderTags() {\n    if (this.props.counter.tags.length === 0 && this.props.counter.value === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Add Tags!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else if (this.props.counter.value < 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stay Positive Man!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 25\n        },\n        children: [\"There are \", this.props.counter.tags.length, \" Tags!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.counter.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  badgeClassGetter() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.props.counter;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n}\n\nexport default Counter; //a component that owns the piece of the state should be the one modifying it\n//this component is controlled by the counters component","map":{"version":3,"sources":["/Users/aniruddhaingle/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","render","counter","onIncrement","onDecrement","onDelete","props","id","value","tags","fontSize","badgeClassGetter","formatCount","renderTags","length","map","tag","classes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  render() {\n    const { counter, onIncrement, onDecrement, onDelete } = this.props;\n    const { id, value, tags } = counter;\n    return (\n      <div>\n        <h2>Counter Number {this.props.counter.id}</h2>\n        <button\n          onClick={() => this.props.onIncrement(this.props.counter)}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <span style={{ fontSize: 30 }} className={this.badgeClassGetter()}>\n          {this.formatCount()}\n        </span>\n        <button\n          onClick={() => this.props.onDecrement(this.props.counter)}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Decrement\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n        {this.renderTags()}\n      </div>\n    );\n  }\n  renderTags() {\n    if (\n      this.props.counter.tags.length === 0 &&\n      this.props.counter.value === 0\n    ) {\n      return <p>Please Add Tags!</p>;\n    } else if (this.props.counter.value < 0) {\n      return <p>Stay Positive Man!</p>;\n    }\n    return (\n      <div>\n        <span style={{ fontSize: 25 }}>\n          There are {this.props.counter.tags.length} Tags!\n        </span>\n        <ul>\n          {this.props.counter.tags.map((tag) => (\n            <li key={tag}>{tag}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  badgeClassGetter() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.props.counter;\n    return value === 0 ? \"Zero\" : value;\n  }\n}\nexport default Counter;\n\n//a component that owns the piece of the state should be the one modifying it\n//this component is controlled by the counters component\n"]},"metadata":{},"sourceType":"module"}