{"ast":null,"code":"var _jsxFileName = \"/Users/aniruddhaingle/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: Math.floor(Math.random() * 10) % 2,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n    console.log(\"Constructor\", this);\n  }\n\n  handleIncrement() {\n    console.log(\"Increment Button Pressed!\");\n  }\n\n  render() {\n    /*#__PURE__*/\n    React.createElement(\"div\");\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 30\n        },\n        className: this.badgeClassGetter(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Add Tags!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 25\n        },\n        children: [\"There are \", this.state.tags.length, \" Tags!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  badgeClassGetter() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/aniruddhaingle/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","constructor","state","count","Math","floor","random","tags","console","log","handleIncrement","render","createElement","fontSize","badgeClassGetter","formatCount","renderTags","length","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAK9BE,EAAAA,WAAW,GAAG;AACZ;AADY,SAJdC,KAIc,GAJN;AACNC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CADlC;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KAIM;AAEZC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,IAA3B;AACD;;AACDC,EAAAA,eAAe,GAAG;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP;AAAAb,IAAAA,KAAK,CAACc,aAAN,CAAoB,KAApB;AACA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAA+B,QAAA,SAAS,EAAE,KAAKC,gBAAL,EAA1C;AAAA,kBACG,KAAKC,WAAL;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,OAAO,EAAE,KAAKL,eADhB;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAUG,KAAKM,UAAL,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AACDA,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKd,KAAL,CAAWK,IAAX,CAAgBU,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAA,8BACE;AAAM,QAAA,KAAK,EAAE;AAAEJ,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA,iCACa,KAAKX,KAAL,CAAWK,IAAX,CAAgBU,MAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACG,KAAKf,KAAL,CAAWK,IAAX,CAAgBW,GAAhB,CAAqBC,GAAD,iBACnB;AAAA,oBAAeA;AAAf,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AACDL,EAAAA,gBAAgB,GAAG;AACjB,QAAIM,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKlB,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOiB,OAAP;AACD;;AAEDL,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEZ,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAvD6B;;AA0DhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: Math.floor(Math.random() * 10) % 2,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n  constructor() {\n    super();\n    console.log(\"Constructor\", this);\n  }\n  handleIncrement() {\n    console.log(\"Increment Button Pressed!\");\n  }\n  render() {\n    React.createElement(\"div\");\n    return (\n      <React.Fragment>\n        <span style={{ fontSize: 30 }} className={this.badgeClassGetter()}>\n          {this.formatCount()}\n        </span>\n        <button\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        {this.renderTags()}\n      </React.Fragment>\n    );\n  }\n  renderTags() {\n    if (this.state.tags.length === 0) {\n      return <p>Please Add Tags!</p>;\n    }\n    return (\n      <div>\n        <span style={{ fontSize: 25 }}>\n          There are {this.state.tags.length} Tags!\n        </span>\n        <ul>\n          {this.state.tags.map((tag) => (\n            <li key={tag}>{tag}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  badgeClassGetter() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}